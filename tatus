[1mdiff --git a/js/src/incomeTax.js b/js/src/incomeTax.js[m
[1mindex 81e172a..da2dbab 100644[m
[1m--- a/js/src/incomeTax.js[m
[1m+++ b/js/src/incomeTax.js[m
[36m@@ -1,109 +1,110 @@[m
[31m-const personalAllowance = 12570;[m
[31m-const basicRate = 0.2;[m
[31m-const higherRateThresholdStart = 50271;[m
[31m-const higherRate = 0.4;[m
[31m-const additionalThresholdStart = 125141;[m
[31m-const additionalRate = 0.45;[m
[31m-const personalAllowanceAdjustmentThreshold = 100000;[m
[31m-[m
[31m-// There are three tax rates:[m
[31m-// Basic = 20%[m
[31m-// Higher - 40%[m
[31m-// Additional = 45%[m
[31m-[m
[31m-// What type of tax payer is this?[m
[31m-const isBasicRate = function (grossAnnualIncome) {[m
[31m-  return ([m
[31m-    grossAnnualIncome > personalAllowance &&[m
[31m-    grossAnnualIncome < higherRateThresholdStart[m
[31m-  );[m
[31m-};[m
[31m-[m
[31m-const isHigherRate = function (grossAnnualIncome) {[m
[31m-  return ([m
[31m-    grossAnnualIncome >= higherRateThresholdStart &&[m
[31m-    grossAnnualIncome < additionalThresholdStart[m
[31m-  );[m
[31m-};[m
[31m-[m
[31m-const isAdditionalRate = function (grossAnnualIncome) {[m
[31m-  return grossAnnualIncome >= additionalThresholdStart;[m
[31m-};[m
[31m-[m
[31m-//Tax calculations[m
[31m-const calculateAbovePersonalBelowAdditional = function ([m
[31m-  grossAmount,[m
[31m-  adjustedAllowance[m
[31m-) {[m
[31m-  return (grossAmount - adjustedAllowance) * basicRate;[m
[31m-};[m
[31m-[m
[31m-const calculateAboveHigherBelowAdditionalAdjusted = function ([m
[31m-  grossAnnualIncome[m
[31m-) {[m
[31m-  //Need to add a modification to the lower threshold[m
[31m-  //When income is over Â£100K, for every Â£2 the personal allowance is reduced[m
[31m-  // by Â£1[m
[31m-[m
[31m-  let adjustedPersonalAllowance = personalAllowance;[m
[31m-  let adjustedHigherRateStart = higherRateThresholdStart;[m
[31m-[m
[31m-  if (grossAnnualIncome > personalAllowanceAdjustmentThreshold) {[m
[31m-    // Remember for every Â£2 the personal allowance is reduced by Â£1[m
[31m-    const amountOver100KHalved =[m
[31m-      (grossAnnualIncome - personalAllowanceAdjustmentThreshold) / 2;[m
[31m-    adjustedPersonalAllowance -= amountOver100KHalved;[m
[31m-[m
[31m-    adjustedHigherRateStart -= amountOver100KHalved;[m
[31m-  }[m
[31m-[m
[31m-  const lowerRateTax = calculateAbovePersonalBelowAdditional([m
[31m-    adjustedHigherRateStart,[m
[31m-    adjustedPersonalAllowance < 0 ? 0 : adjustedPersonalAllowance[m
[31m-  );[m
[31m-[m
[31m-  const amountOverHigherRate =[m
[31m-    grossAnnualIncome - (adjustedHigherRateStart - 1);[m
[31m-  const higherRateTax = amountOverHigherRate * higherRate;[m
[31m-[m
[31m-  return higherRateTax + lowerRateTax;[m
[31m-};[m
[31m-[m
[31m-const calculateAboveAdditionalThreshold = function (grossAnnualIncome) {[m
[31m-  const amountOverAdditionalThreshold =[m
[31m-    grossAnnualIncome - (additionalThresholdStart - 1); // 150000[m
[31m-  const taxUnderAdditionalThreshold =[m
[31m-    calculateAboveHigherBelowAdditionalAdjusted(additionalThresholdStart - 1);[m
[31m-[m
[31m-  const taxOverAdditionalThreshold =[m
[31m-    amountOverAdditionalThreshold * additionalRate +[m
[31m-    taxUnderAdditionalThreshold;[m
[31m-[m
[31m-  return taxOverAdditionalThreshold;[m
[31m-};[m
[31m-[m
[31m-//Main function[m
[31m-const calculateAnnualIncomeTax = function (grossAnnualIncome) {[m
[31m-  console.log(grossAnnualIncome);[m
[31m-  //Shouldn't pay any tax[m
[31m-  if (grossAnnualIncome <= personalAllowance) return 0;[m
[31m-[m
[31m-  //Above 12571 aand below 50271[m
[31m-  if (isBasicRate(grossAnnualIncome))[m
[31m-    return calculateAbovePersonalBelowAdditional([m
[31m-      grossAnnualIncome,[m
[31m-      personalAllowance[m
[32m+[m[32mexport class IncomeTax {[m
[32m+[m[32m  personalAllowance = 12570;[m
[32m+[m[32m  higherRateThresholdStart = 50271;[m
[32m+[m[32m  higherRate = 0.4;[m
[32m+[m[32m  additionalThresholdStart = 125141;[m
[32m+[m[32m  additionalRate = 0.45;[m
[32m+[m[32m  personalAllowanceAdjustmentThreshold = 100000;[m
[32m+[m
[32m+[m[32m  // There are three tax rates:[m
[32m+[m[32m  // Basic = 20%[m
[32m+[m[32m  // Higher - 40%[m
[32m+[m[32m  // Additional = 45%[m
[32m+[m
[32m+[m[32m  // What type of tax payer is this?[m
[32m+[m[32m  isBasicRate = function (grossAnnualIncome) {[m
[32m+[m[32m    return ([m
[32m+[m[32m      grossAnnualIncome > this.personalAllowance &&[m
[32m+[m[32m      grossAnnualIncome < this.higherRateThresholdStart[m
     );[m
[32m+[m[32m  };[m
 [m
[31m-  //Above 150000[m
[31m-  if (isAdditionalRate(grossAnnualIncome)) {[m
[31m-    return calculateAboveAdditionalThreshold(grossAnnualIncome);[m
[31m-  }[m
[31m-[m
[31m-  //above 50271 and below 150000[m
[31m-  if (isHigherRate(grossAnnualIncome)) {[m
[31m-    return calculateAboveHigherBelowAdditionalAdjusted(grossAnnualIncome);[m
[31m-  }[m
[31m-};[m
[32m+[m[32m  isHigherRate = function (grossAnnualIncome) {[m
[32m+[m[32m    return ([m
[32m+[m[32m      grossAnnualIncome >= this.higherRateThresholdStart &&[m
[32m+[m[32m      grossAnnualIncome < this.additionalThresholdStart[m
[32m+[m[32m    );[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  isAdditionalRate = function (grossAnnualIncome) {[m
[32m+[m[32m    return grossAnnualIncome >= this.additionalThresholdStart;[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  //Tax calculations[m
[32m+[m[32m  calculateAbovePersonalBelowAdditional = function ([m
[32m+[m[32m    grossAmount,[m
[32m+[m[32m    adjustedAllowance[m
[32m+[m[32m  ) {[m
[32m+[m[32m    console.log(grossAmount, adjustedAllowance, this.basicRate);[m
[32m+[m[32m    return (grossAmount - adjustedAllowance) * this.basicRate;[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  calculateAboveHigherBelowAdditionalAdjusted = function (grossAnnualIncome) {[m
[32m+[m[32m    //Need to add a modification to the lower threshold[m
[32m+[m[32m    //When income is over Â£100K, for every Â£2 the personal allowance is reduced[m
[32m+[m[32m    // by Â£1[m
[32m+[m
[32m+[m[32m    let adjustedPersonalAllowance = this.personalAllowance;[m
[32m+[m[32m    let adjustedHigherRateStart = this.higherRateThresholdStart;[m
[32m+[m
[32m+[m[32m    if (grossAnnualIncome > this.personalAllowanceAdjustmentThreshold) {[m
[32m+[m[32m      // Remember for every Â£2 the personal allowance is reduced by Â£1[m
[32m+[m[32m      const amountOver100KHalved =[m
[32m+[m[32m        (grossAnnualIncome - this.personalAllowanceAdjustmentThreshold) / 2;[m
[32m+[m[32m      adjustedPersonalAllowance -= amountOver100KHalved;[m
[32m+[m
[32m+[m[32m      adjustedHigherRateStart -= amountOver100KHalved;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    const lowerRateTax = this.calculateAbovePersonalBelowAdditional([m
[32m+[m[32m      adjustedHigherRateStart,[m
[32m+[m[32m      adjustedPersonalAllowance < 0 ? 0 : adjustedPersonalAllowance[m
[32m+[m[32m    );[m
 [m
[31m-export { calculateAnnualIncomeTax };[m
[32m+[m[32m    const amountOverHigherRate =[m
[32m+[m[32m      grossAnnualIncome - (adjustedHigherRateStart - 1);[m
[32m+[m[32m    const higherRateTax = amountOverHigherRate * this.higherRate;[m
[32m+[m
[32m+[m[32m    return higherRateTax + lowerRateTax;[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  calculateAboveAdditionalThreshold = function (grossAnnualIncome) {[m
[32m+[m[32m    const amountOverAdditionalThreshold =[m
[32m+[m[32m      grossAnnualIncome - (additionalThresholdStart - 1); // 150000[m
[32m+[m[32m    const taxUnderAdditionalThreshold =[m
[32m+[m[32m      this.calculateAboveHigherBelowAdditionalAdjusted([m
[32m+[m[32m        additionalThresholdStart - 1[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m    const taxOverAdditionalThreshold =[m
[32m+[m[32m      amountOverAdditionalThreshold * additionalRate +[m
[32m+[m[32m      taxUnderAdditionalThreshold;[m
[32m+[m
[32m+[m[32m    return taxOverAdditionalThreshold;[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  //Main function[m
[32m+[m[32m  calculateAnnualIncomeTax = function (grossAnnualIncome) {[m
[32m+[m[32m    //Shouldn't pay any tax[m
[32m+[m[32m    if (grossAnnualIncome <= this.personalAllowance) return 0;[m
[32m+[m
[32m+[m[32m    //Above 12571 aand below 50271[m
[32m+[m[32m    if (this.isBasicRate(grossAnnualIncome))[m
[32m+[m[32m      return this.calculateAbovePersonalBelowAdditional([m
[32m+[m[32m        grossAnnualIncome,[m
[32m+[m[32m        this.personalAllowance[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m    //Above 150000[m
[32m+[m[32m    if (this.isAdditionalRate(grossAnnualIncome)) {[m
[32m+[m[32m      return this.calculateAboveAdditionalThreshold(grossAnnualIncome);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //above 50271 and below 150000[m
[32m+[m[32m    if (this.isHigherRate(grossAnnualIncome)) {[m
[32m+[m[32m      return this.calculateAboveHigherBelowAdditionalAdjusted([m
[32m+[m[32m        grossAnnualIncome[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[1mdiff --git a/js/src/nationalInsurance.js b/js/src/nationalInsurance.js[m
[1mindex 84c5954..26e2c7c 100644[m
[1m--- a/js/src/nationalInsurance.js[m
[1m+++ b/js/src/nationalInsurance.js[m
[36m@@ -1,23 +1,23 @@[m
[31m-const calculateMonthlyNationalInsurance = function (grossAnnualIncome) {[m
[31m-  const lowerThreshold = 12570;[m
[31m-  const lowerRate = 0.1;[m
[31m-  const upperThreshold = 50270;[m
[31m-  const upperRate = 0.2;[m
[32m+[m[32mexport class NationalInsurance {[m
[32m+[m[32m  calculateMonthlyNationalInsurance = function (grossAnnualIncome) {[m
[32m+[m[32m    const lowerThreshold = 12570;[m
[32m+[m[32m    const lowerRate = 0.1;[m
[32m+[m[32m    const upperThreshold = 50270;[m
[32m+[m[32m    const upperRate = 0.2;[m
 [m
[31m-  if (grossAnnualIncome <= lowerThreshold) {[m
[31m-    return 0;[m
[31m-  }[m
[32m+[m[32m    if (grossAnnualIncome <= lowerThreshold) {[m
[32m+[m[32m      return 0;[m
[32m+[m[32m    }[m
 [m
[31m-  if (grossAnnualIncome <= upperThreshold)[m
[31m-    return +(((grossAnnualIncome - lowerThreshold) * lowerRate) / 12).toFixed([m
[31m-      2[m
[31m-    );[m
[32m+[m[32m    if (grossAnnualIncome <= upperThreshold)[m
[32m+[m[32m      return +(((grossAnnualIncome - lowerThreshold) * lowerRate) / 12).toFixed([m
[32m+[m[32m        2[m
[32m+[m[32m      );[m
 [m
[31m-  return +([m
[31m-    ((upperThreshold - lowerThreshold) * lowerRate +[m
[31m-      (grossAnnualIncome - upperThreshold) * upperRate) /[m
[31m-    12[m
[31m-  ).toFixed(2);[m
[31m-};[m
[31m-[m
[31m-export { calculateMonthlyNationalInsurance };[m
[32m+[m[32m    return +([m
[32m+[m[32m      ((upperThreshold - lowerThreshold) * lowerRate +[m
[32m+[m[32m        (grossAnnualIncome - upperThreshold) * upperRate) /[m
[32m+[m[32m      12[m
[32m+[m[32m    ).toFixed(2);[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[1mdiff --git a/js/src/script.js b/js/src/script.js[m
[1mindex 5851c26..fc3462f 100644[m
[1m--- a/js/src/script.js[m
[1m+++ b/js/src/script.js[m
[36m@@ -1,5 +1,5 @@[m
[31m-import { calculateMonthlyNationalInsurance } from './nationalInsurance.js';[m
[31m-import { calculateAnnualIncomeTax } from './incomeTax.js';[m
[32m+[m[32mimport { NationalInsurance } from './nationalInsurance.js';[m
[32m+[m[32mimport { IncomeTax } from './incomeTax.js';[m
 [m
 // DOM elements[m
 const btnCalculate = document.querySelector('.btn-calculate');[m
[36m@@ -14,6 +14,9 @@[m [mconst monthlyNationalInsuranceLabel = document.querySelector([m
 const monthlyIncomeTaxLabel = document.querySelector('.monthly-income-tax');[m
 const monthlyNetLabel = document.querySelector('.monthly-net-income');[m
 [m
[32m+[m[32mconst nationalInsurance = new NationalInsurance();[m
[32m+[m[32mconst incomeTax = new IncomeTax();[m
[32m+[m
 // Validations[m
 const inputsArevalid = function () {[m
   if (isNaN(inputAnnualIncome.value) && isNaN(parseFloat(inputAnnualIncome))) {[m
[36m@@ -53,13 +56,14 @@[m [mbtnCalculate.addEventListener('click', function (event) {[m
 [m
   const taxableIncome = +(annualIncome - monthlyPension * 12).toFixed(2);[m
   console.log(taxableIncome);[m
[31m-  const monthlyNationalInsurance =[m
[31m-    calculateMonthlyNationalInsurance(annualIncome).toFixed(2);[m
[32m+[m[32m  const monthlyNationalInsurance = nationalInsurance[m
[32m+[m[32m    .calculateMonthlyNationalInsurance(annualIncome)[m
[32m+[m[32m    .toFixed(2);[m
 [m
   monthlyNationalInsuranceLabel.textContent = `Your monthly national insurance is: Â£${monthlyNationalInsurance}`;[m
 [m
   const monthlyIncomeTax = ([m
[31m-    calculateAnnualIncomeTax(taxableIncome) / 12[m
[32m+[m[32m    incomeTax.calculateAnnualIncomeTax(taxableIncome) / 12[m
   ).toFixed(2);[m
   monthlyIncomeTaxLabel.textContent = `Your monthly income tax is: Â£${monthlyIncomeTax}`;[m
 [m
[1mdiff --git a/js/tests/incomeTax.test.js b/js/tests/incomeTax.test.js[m
[1mindex 9e00e05..51f054f 100644[m
[1m--- a/js/tests/incomeTax.test.js[m
[1m+++ b/js/tests/incomeTax.test.js[m
[36m@@ -1,37 +1,37 @@[m
[31m-import { calculateIncomeTax } from '../src/incomeTax.js';[m
[32m+[m[32mimport { calculateAnnualIncomeTax } from '../src/incomeTax.js';[m
 [m
 test('calculateIncomeTax below threshold', () => {[m
[31m-  expect(calculateIncomeTax(12569)).toBe(0);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(12569)).toBe(0);[m
 });[m
 [m
 test('calculateIncomeTax on threshold returns 0', () => {[m
[31m-  expect(calculateIncomeTax(12570)).toBe(0);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(12570)).toBe(0);[m
 });[m
 [m
 test('calculateIncomeTax between lower and higher threshold', () => {[m
[31m-  expect(calculateIncomeTax(12571)).toBe(0.2);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(12571)).toBe(0.2);[m
 });[m
 [m
 test('calculateIncomeTax just below higher threshold', () => {[m
[31m-  expect(calculateIncomeTax(50269)).toBe(7539.8);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(50269)).toBe(7539.8);[m
 });[m
 [m
 test('calculateIncomeTax on higher threshold', () => {[m
[31m-  expect(calculateIncomeTax(50271)).toBe(7540.6);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(50271)).toBe(7540.6);[m
 });[m
 [m
 test('calculateIncomeTax 100,000', () => {[m
[31m-  expect(calculateIncomeTax(100000)).toBe(27432.2);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(100000)).toBe(27432.2);[m
 });[m
 [m
 test('calculateIncomeTax 110,000', () => {[m
[31m-  expect(calculateIncomeTax(110000)).toBe(33432.2);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(110000)).toBe(33432.2);[m
 });[m
 [m
 test('calculateIncomeTax just over additioanl threshold', () => {[m
[31m-  expect(calculateIncomeTax(125140)).toBe(42516.2);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(125140)).toBe(42516.2);[m
 });[m
 [m
 test('calculateIncomeTax way over additional threshold', () => {[m
[31m-  expect(calculateIncomeTax(250000)).toBe(98703.2);[m
[32m+[m[32m  expect(calculateAnnualIncomeTax(250000)).toBe(98703.2);[m
 });[m
[1mdiff --git a/js/tests/nationalInsurance.test.js b/js/tests/nationalInsurance.test.js[m
[1mindex 0d0cd05..3325752 100644[m
[1m--- a/js/tests/nationalInsurance.test.js[m
[1m+++ b/js/tests/nationalInsurance.test.js[m
[36m@@ -1,13 +1,19 @@[m
[31m-import { calculateMonthlyNationalInsurance } from '../src/nationalInsurance.js';[m
[32m+[m[32mimport { NationalInsurance } from '../src/nationalInsurance.js';[m
[32m+[m
[32m+[m[32mconst nationalInsurance = new NationalInsurance();[m
 [m
 test('calculateMonthlyNationalInsurance below threshold', () => {[m
[31m-  expect(calculateMonthlyNationalInsurance(12569)).toBe(0);[m
[32m+[m[32m  expect(nationalInsurance.calculateMonthlyNationalInsurance(12569)).toBe(0);[m
 });[m
 [m
 test('calculateMonthlyNationalInsurance below upper threshold', () => {[m
[31m-  expect(calculateMonthlyNationalInsurance(25000)).toBe(103.58);[m
[32m+[m[32m  expect(nationalInsurance.calculateMonthlyNationalInsurance(25000)).toBe([m
[32m+[m[32m    103.58[m
[32m+[m[32m  );[m
 });[m
 [m
 test('calculateMonthlyNationalInsurance above upper threshold', () => {[m
[31m-  expect(calculateMonthlyNationalInsurance(80000)).toBe(809.67);[m
[32m+[m[32m  expect(nationalInsurance.calculateMonthlyNationalInsurance(80000)).toBe([m
[32m+[m[32m    809.67[m
[32m+[m[32m  );[m
 });[m
